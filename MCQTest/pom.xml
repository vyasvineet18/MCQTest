<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>MCQTest</groupId>
  <artifactId>MCQTest</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>MCQTest Maven Webapp</name>
  <url>http://maven.apache.org</url>
  	<properties>
		<jdk.version>1.8</jdk.version>
		<spring.version>4.2.0.RELEASE</spring.version>
		<jstl.version>1.2</jstl.version>
		<servletapi.version>2.5</servletapi.version>
	</properties>
	<dependencies>

		<!-- Spring MVC framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- for compile only, your container should have this -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servletapi.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
  <build>
    <finalName>MCQTest</finalName>
        <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.5.1</version>
	        <configuration>
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
	      </plugin>
	      <plugin>
	        <groupId>org.jboss.as.plugins</groupId>
	        <artifactId>jboss-as-maven-plugin</artifactId>
	        <version>7.1.1.Final</version>
	        <configuration>
	            <hostname>${deploy.jboss.host}</hostname>
	            <port>${deploy.jboss.port}</port>
	            <username>${deploy.jboss.user}</username>
	            <password>${deploy.jboss.password}</password>
	            <name>${backend.deployment-name}</name>
	            <filename>${project.build.finalName}.war</filename>
	            <skip>${skipDeployment}</skip>
	        </configuration>
	        <executions>
	            <execution>
	                <id>deploy-war</id>
	                <phase>install</phase>
	                <goals>
	                    <goal>deploy</goal>
	                </goals>
	            </execution>
	        </executions>
	    </plugin> 
	 </plugins>
  </build>
</project>
